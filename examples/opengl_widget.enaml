import numpy as np

# add factory
from enaml.qt import qt_factories
def create_openglwidget():
    from enaml_opengl.qt.qt_opengl_widget import QtOpenGLWidget
    return QtOpenGLWidget

qt_factories.QT_FACTORIES['OpenGLWidget'] = create_openglwidget


from enaml.application import Application

from enaml.widgets.api import MainWindow, Container
from enaml_opengl.widgets.opengl_widget import OpenGLWidget

from enaml_opengl.renderer import MonoRenderer
from enaml_opengl.camera import PinholeCamera
from enaml_opengl.viewport import PerspectiveViewport

from enaml_opengl.nodes.coordinate_axes import AxisItem
from enaml_opengl.arcball import ArcballCameraControl


# initialize modelview-matrix
mv = np.eye(4)
mv[0:3, 3] = np.array([0., 0., 5.])

enamldef Main(MainWindow):
    title = 'OpenGL Widget Test'

    AxisItem: ai1:
        line_width = 3.0

    PinholeCamera: camera:
        viewport = PerspectiveViewport()
        modelview_matrix = mv
        modelview_matrix::
            print "repaint"
            glwin1.update()

    ArcballCameraControl: arcball:
        start_transform = camera.modelview_matrix
        new_transform >> camera.modelview_matrix



    MonoRenderer: renderer:
        camera = camera
        nodes << [ai1, ]



    Container:
        OpenGLWidget: glwin1:
            minimum_size = (800, 600)
            renderer = renderer
            size >> arcball.window_size
            mouse_handler = arcball
            key_handler = arcball

            initialized::
                print "opengl widget is initialized"
                renderer.trigger_update()

